/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/countup.js";
exports.ids = ["vendor-chunks/countup.js"];
exports.modules = {

/***/ "(ssr)/./node_modules/countup.js/dist/countUp.umd.js":
/*!*****************************************************!*\
  !*** ./node_modules/countup.js/dist/countUp.umd.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("!function(t, i) {\n     true ? i(exports) : 0;\n}(this, function(t) {\n    \"use strict\";\n    var i = function() {\n        return i = Object.assign || function(t) {\n            for(var i, n = 1, s = arguments.length; n < s; n++)for(var a in i = arguments[n])Object.prototype.hasOwnProperty.call(i, a) && (t[a] = i[a]);\n            return t;\n        }, i.apply(this, arguments);\n    }, n = function() {\n        function t(t, n, s) {\n            var a = this;\n            this.endVal = n, this.options = s, this.version = \"2.8.1\", this.defaults = {\n                startVal: 0,\n                decimalPlaces: 0,\n                duration: 2,\n                useEasing: !0,\n                useGrouping: !0,\n                useIndianSeparators: !1,\n                smartEasingThreshold: 999,\n                smartEasingAmount: 333,\n                separator: \",\",\n                decimal: \".\",\n                prefix: \"\",\n                suffix: \"\",\n                enableScrollSpy: !1,\n                scrollSpyDelay: 200,\n                scrollSpyOnce: !1\n            }, this.finalEndVal = null, this.useEasing = !0, this.countDown = !1, this.error = \"\", this.startVal = 0, this.paused = !0, this.once = !1, this.count = function(t) {\n                a.startTime || (a.startTime = t);\n                var i = t - a.startTime;\n                a.remaining = a.duration - i, a.useEasing ? a.countDown ? a.frameVal = a.startVal - a.easingFn(i, 0, a.startVal - a.endVal, a.duration) : a.frameVal = a.easingFn(i, a.startVal, a.endVal - a.startVal, a.duration) : a.frameVal = a.startVal + (a.endVal - a.startVal) * (i / a.duration);\n                var n = a.countDown ? a.frameVal < a.endVal : a.frameVal > a.endVal;\n                a.frameVal = n ? a.endVal : a.frameVal, a.frameVal = Number(a.frameVal.toFixed(a.options.decimalPlaces)), a.printValue(a.frameVal), i < a.duration ? a.rAF = requestAnimationFrame(a.count) : null !== a.finalEndVal ? a.update(a.finalEndVal) : a.options.onCompleteCallback && a.options.onCompleteCallback();\n            }, this.formatNumber = function(t) {\n                var i, n, s, e, o = t < 0 ? \"-\" : \"\";\n                i = Math.abs(t).toFixed(a.options.decimalPlaces);\n                var r = (i += \"\").split(\".\");\n                if (n = r[0], s = r.length > 1 ? a.options.decimal + r[1] : \"\", a.options.useGrouping) {\n                    e = \"\";\n                    for(var l = 3, h = 0, u = 0, p = n.length; u < p; ++u)a.options.useIndianSeparators && 4 === u && (l = 2, h = 1), 0 !== u && h % l == 0 && (e = a.options.separator + e), h++, e = n[p - u - 1] + e;\n                    n = e;\n                }\n                return a.options.numerals && a.options.numerals.length && (n = n.replace(/[0-9]/g, function(t) {\n                    return a.options.numerals[+t];\n                }), s = s.replace(/[0-9]/g, function(t) {\n                    return a.options.numerals[+t];\n                })), o + a.options.prefix + n + s + a.options.suffix;\n            }, this.easeOutExpo = function(t, i, n, s) {\n                return n * (1 - Math.pow(2, -10 * t / s)) * 1024 / 1023 + i;\n            }, this.options = i(i({}, this.defaults), s), this.formattingFn = this.options.formattingFn ? this.options.formattingFn : this.formatNumber, this.easingFn = this.options.easingFn ? this.options.easingFn : this.easeOutExpo, this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.endVal = this.validateValue(n), this.options.decimalPlaces = Math.max(this.options.decimalPlaces), this.resetDuration(), this.options.separator = String(this.options.separator), this.useEasing = this.options.useEasing, \"\" === this.options.separator && (this.options.useGrouping = !1), this.el = \"string\" == typeof t ? document.getElementById(t) : t, this.el ? this.printValue(this.startVal) : this.error = \"[CountUp] target is null or undefined\",  false && (0);\n        }\n        return t.prototype.handleScroll = function(t) {\n            if (t && window && !t.once) {\n                var i = window.innerHeight + window.scrollY, n = t.el.getBoundingClientRect(), s = n.top + window.pageYOffset, a = n.top + n.height + window.pageYOffset;\n                a < i && a > window.scrollY && t.paused ? (t.paused = !1, setTimeout(function() {\n                    return t.start();\n                }, t.options.scrollSpyDelay), t.options.scrollSpyOnce && (t.once = !0)) : (window.scrollY > a || s > i) && !t.paused && t.reset();\n            }\n        }, t.prototype.determineDirectionAndSmartEasing = function() {\n            var t = this.finalEndVal ? this.finalEndVal : this.endVal;\n            this.countDown = this.startVal > t;\n            var i = t - this.startVal;\n            if (Math.abs(i) > this.options.smartEasingThreshold && this.options.useEasing) {\n                this.finalEndVal = t;\n                var n = this.countDown ? 1 : -1;\n                this.endVal = t + n * this.options.smartEasingAmount, this.duration = this.duration / 2;\n            } else this.endVal = t, this.finalEndVal = null;\n            null !== this.finalEndVal ? this.useEasing = !1 : this.useEasing = this.options.useEasing;\n        }, t.prototype.start = function(t) {\n            this.error || (this.options.onStartCallback && this.options.onStartCallback(), t && (this.options.onCompleteCallback = t), this.duration > 0 ? (this.determineDirectionAndSmartEasing(), this.paused = !1, this.rAF = requestAnimationFrame(this.count)) : this.printValue(this.endVal));\n        }, t.prototype.pauseResume = function() {\n            this.paused ? (this.startTime = null, this.duration = this.remaining, this.startVal = this.frameVal, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count)) : cancelAnimationFrame(this.rAF), this.paused = !this.paused;\n        }, t.prototype.reset = function() {\n            cancelAnimationFrame(this.rAF), this.paused = !0, this.resetDuration(), this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.printValue(this.startVal);\n        }, t.prototype.update = function(t) {\n            cancelAnimationFrame(this.rAF), this.startTime = null, this.endVal = this.validateValue(t), this.endVal !== this.frameVal && (this.startVal = this.frameVal, null == this.finalEndVal && this.resetDuration(), this.finalEndVal = null, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count));\n        }, t.prototype.printValue = function(t) {\n            var i;\n            if (this.el) {\n                var n = this.formattingFn(t);\n                if (null === (i = this.options.plugin) || void 0 === i ? void 0 : i.render) this.options.plugin.render(this.el, n);\n                else if (\"INPUT\" === this.el.tagName) this.el.value = n;\n                else \"text\" === this.el.tagName || \"tspan\" === this.el.tagName ? this.el.textContent = n : this.el.innerHTML = n;\n            }\n        }, t.prototype.ensureNumber = function(t) {\n            return \"number\" == typeof t && !isNaN(t);\n        }, t.prototype.validateValue = function(t) {\n            var i = Number(t);\n            return this.ensureNumber(i) ? i : (this.error = \"[CountUp] invalid start or end value: \".concat(t), null);\n        }, t.prototype.resetDuration = function() {\n            this.startTime = null, this.duration = 1e3 * Number(this.options.duration), this.remaining = this.duration;\n        }, t;\n    }();\n    t.CountUp = n;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/countup.js/dist/countUp.umd.js\n");

/***/ })

};
;